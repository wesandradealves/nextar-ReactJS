import type { Meta, StoryObj } from '@storybook/react';
import { DashboardCharts, MaintenanceTypeChart, MaintenanceAgentChart } from './index';
import { TipoManutencao } from '@/utils/enums';

const meta: Meta<typeof DashboardCharts> = {
  title: 'Components/Molecules/Charts',
  component: DashboardCharts,
  parameters: {
    layout: 'centered',
    docs: {
      description: {
        component: `
O componente **Charts** oferece visualiza√ß√µes gr√°ficas para o dashboard do sistema de manuten√ß√£o.

### üéØ **Principais Caracter√≠sticas:**
- **Gr√°fico de Pizza**: Distribui√ß√£o por tipo de manuten√ß√£o (corretiva/preventiva)
- **Gr√°fico de Barras**: Distribui√ß√£o por agente de manuten√ß√£o
- **Responsivo**: Adapta√ß√£o autom√°tica ao tamanho da tela
- **Interativo**: Tooltips com informa√ß√µes detalhadas
- **Estados vazios**: Tratamento adequado para aus√™ncia de dados

### üîÑ **Integra√ß√£o com o Dashboard:**
- Consumo direto dos dados da API de dashboard
- Atualiza√ß√£o autom√°tica com o sistema de cache
- Visualiza√ß√£o em tempo real das estat√≠sticas do sistema

### üìä **Customiza√ß√£o:**
- Cores tem√°ticas consistentes com a identidade visual
- Op√ß√µes de configura√ß√£o via props
- Componentes individuais reutiliz√°veis
        `
      }
    }
  },
  tags: ['autodocs'],
  argTypes: {
    distribucaoTipo: {
      description: 'Dados de distribui√ß√£o por tipo de manuten√ß√£o',
      control: { type: 'object' }
    },
    distribucaoAgente: {
      description: 'Dados de distribui√ß√£o por agente de manuten√ß√£o',
      control: { type: 'object' }
    }
  }
};

export default meta;
type Story = StoryObj<typeof DashboardCharts>;

// Dados de exemplo para os gr√°ficos
const mockDistribuicaoTipo = {
  [TipoManutencao.CORRETIVA]: 42,
  [TipoManutencao.PREVENTIVA]: 58
};

const mockDistribuicaoAgente = [
  { agenteId: '1', nomeAgente: 'Carlos Silva', quantidade: 25, quantidadeConcluidos: 20 },
  { agenteId: '2', nomeAgente: 'Ana Santos', quantidade: 18, quantidadeConcluidos: 15 },
  { agenteId: '3', nomeAgente: 'Roberto Oliveira', quantidade: 30, quantidadeConcluidos: 22 },
  { agenteId: '4', nomeAgente: 'Juliana Costa', quantidade: 12, quantidadeConcluidos: 10 },
  { agenteId: '5', nomeAgente: 'Fernando Souza', quantidade: 22, quantidadeConcluidos: 18 },
  { agenteId: '6', nomeAgente: 'Mariana Lima', quantidade: 15, quantidadeConcluidos: 12 }
];

// Hist√≥rias
export const Default: Story = {
  args: {
    distribucaoTipo: mockDistribuicaoTipo,
    distribucaoAgente: mockDistribuicaoAgente
  }
};

export const EmptyData: Story = {
  args: {
    distribucaoTipo: { [TipoManutencao.CORRETIVA]: 0, [TipoManutencao.PREVENTIVA]: 0 },
    distribucaoAgente: []
  },
  parameters: {
    docs: {
      description: {
        story: 'Estado vazio quando n√£o h√° dados dispon√≠veis para visualiza√ß√£o'
      }
    }
  }
};

export const TypeChart: StoryObj<typeof MaintenanceTypeChart> = {
  render: (args) => <MaintenanceTypeChart {...args} />,
  args: {
    distribucaoTipo: mockDistribuicaoTipo
  },
  parameters: {
    docs: {
      description: {
        story: 'Gr√°fico de pizza mostrando a distribui√ß√£o por tipo de manuten√ß√£o'
      }
    }
  }
};

export const AgentChart: StoryObj<typeof MaintenanceAgentChart> = {
  render: (args) => <MaintenanceAgentChart {...args} />,
  args: {
    distribucaoAgente: mockDistribuicaoAgente
  },
  parameters: {
    docs: {
      description: {
        story: 'Gr√°fico de barras mostrando a distribui√ß√£o por agente de manuten√ß√£o'
      }
    }
  }
};
